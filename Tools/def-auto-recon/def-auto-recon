#!/usr/bin/python3

import os

class DefAutoRecon:
     
    def __init__(self):
        # Initialize and create necessary directories
        print("[+] Def-Auto-Recon initialized...")
        self.setup_directories()

    def setup_directories(self):
        # Create 'files' and 'Recycle-Bin' directories if not exist
        if not os.path.exists("files"):
            os.mkdir("files")
            print("[+] 'files' directory created.")
        if not os.path.exists("Recycle-Bin"):
            os.mkdir("Recycle-Bin")
            print("[+] 'Recycle-Bin' directory created.")

    def crt_sh(self, domain):
        # Find subdomains using crt.sh
        print("[+] Crt.sh Subdomains founding Strt..." + domain)
        print(f"[+] Starting subdomain search for: {domain}")
        os.system(f"curl -s https://crt.sh/?q={domain} | grep -oE '[a-zA-Z0-9.-]+\\.{domain}' >> files/crt.sh.{domain}.active.txt")
        print("[+] crt.sh Subdomain search complete.")
        
        # Filter valid subdomains
        self.filter_domains(domain)
        
        # Move active file to Recycle-Bin
        os.system(f'mv files/crt.sh.{domain}.active.txt Recycle-Bin/')
        print(f"[+] Temporary file moved to 'Recycle-Bin'.")

    def filter_domains(self, domain):
        # Filter and save subdomains ending with the domain
        with open(f'files/crt.sh.{domain}.active.txt', 'r') as file: 
            lines = file.readlines()
        
        filtered_domains = [line for line in lines if line.strip().endswith(f'.{domain}')] 
        
        with open(f'files/crt.sh.{domain}.txt', 'w') as output_file: 
            output_file.writelines(filtered_domains)
        
        print(f"[+] Filtered subdomains saved to 'files/crt.sh.{domain}.txt'.")

    # TheHarvester tool
    def TheHarvester(self, domain):
        print("[+] TheHarvester initialized...")
        print(f"[+] Starting subdomain search for: {domain}")
        os.system(f"theHarvester -d {self.domain} -b all | tee files/TheHarvester.{self.domain}.txt ")
        print("[+] TheHarvester Subdomain search complete.")


if __name__ == "__main__":
    inp = input("Enter your domain: ")
    exploit = DefAutoRecon()
    exploit.crt_sh(inp)
